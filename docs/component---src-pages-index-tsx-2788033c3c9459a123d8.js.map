{"version":3,"file":"component---src-pages-index-tsx-2788033c3c9459a123d8.js","mappings":"sLAAaA,EAAc,SAACC,GAAD,OAAgBA,EAAK,KACnCC,EAAc,SAACD,GAAD,OAAgBD,EAAYC,GAAM,IAChDE,EAAY,SAACF,GAAD,OAAgBC,EAAYD,GAAM,IAK9CG,EAAc,SAACC,GAAD,OADmB,KACY,GAAJA,IACzCC,EAAY,SAACC,GAAD,OAAeH,EAAgB,GAAJG,IAK9CC,EAAW,SAACC,EAAeC,GAC/B,IAAMC,EAHK,SAACF,EAAeC,GAAhB,OAAuCD,EAAQG,UAAYF,EAAKE,UAG7DC,CAAKJ,EAASC,GAC5B,OAZsCP,EAYtBQ,GAZsC,IAiBlDG,EAAY,SAACL,EAAeC,GAChC,IAAMK,EAAOP,EAASC,EAASC,GACzBM,EAAUD,EAAOE,KAAKC,MAAMH,GAClC,OAAOZ,EAd8BG,EAAc,GAczBU,KAKtBG,EAAc,SAACV,EAAeC,GAClC,IAAMU,EAAQN,EAAUL,EAASC,GAC3BM,EAAUI,EAAQH,KAAKC,MAAME,GACnC,OAAOlB,EAAYI,EAAUU,KAWlBK,EAAqB,SAACZ,EAAeC,GAAhB,OAAuCO,KAAKC,MAN1D,SAACT,EAAeC,GAClC,IAAMY,EAAUH,EAAYV,EAASC,GAC/BM,EAAUM,EAAUL,KAAKC,MAAMI,GACrC,OAAOtB,EAAYI,EAAYY,IAGmDO,CAAYd,EAASC,KCIzG,EAtCwC,SAAC,GAAiB,IAAfD,EAAc,EAAdA,QAEzC,GAA0Be,EAAAA,EAAAA,UAAS,GAA3BT,EAAR,KAAcU,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAA7BJ,EAAR,KAAeM,EAAf,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAjCF,EAAR,KAAiBK,EAAjB,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAjCI,EAAR,KAAiBC,EAAjB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACRL,EDE2B,SAAChB,EAAeC,GAAhB,OAAuCO,KAAKC,MAAMV,EAASC,EAASC,ICFvFqB,CAAgBtB,EAAS,IAAIuB,WAGvCF,EAAAA,EAAAA,YAAU,WACRJ,EDM4B,SAACjB,EAAeC,GAAhB,OAAuCO,KAAKC,MAAMJ,EAAUL,EAASC,ICNxFuB,CAAiBxB,EAAS,IAAIuB,WAGzCF,EAAAA,EAAAA,YAAU,WACRH,EDU8B,SAAClB,EAAeC,GAAhB,OAAuCO,KAAKC,MAAMC,EAAYV,EAASC,ICV1FwB,CAAmBzB,EAAS,IAAIuB,WAG7CF,EAAAA,EAAAA,YAAU,WACR,IAAMK,EAAWC,aAAY,WAC3BP,EAAWR,EAAmBZ,EAAS,IAAIuB,SAC1C,KAEH,OAAO,kBAAMK,cAAcF,MAC1B,IAID,2BACE,4BAAOpB,GAAY,qCADrB,IAEE,4BAAOK,GAAa,sCAFtB,IAGE,4BAAOE,GAAe,wCAHxB,IAIE,4BAAOM,GAAe,0CC3B5B,EARkB,kBAChB,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKU,MAAM,SACX,gBAAC,EAAD,CAAS7B,QAAS,IAAIuB,KAAK,KAAM,GAAI,GAAI,GAAI,EAAG,EAAG,KACnD,gBAAC,EAAD,CAASvB,QAAS,IAAIuB,KAAK,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG","sources":["webpack://counter/./src/counter/time.converter.ts","webpack://counter/./src/counter/counter.tsx","webpack://counter/./src/pages/index.tsx"],"sourcesContent":["export const msToSeconds = (ms: number) => ms / 1000\nexport const msToMinutes = (ms: number) => msToSeconds(ms) / 60\nexport const msToHours = (ms: number) => msToMinutes(ms) / 60\nexport const msToDays = (ms: number) => msToHours(ms) / 24\n\n\nexport const secondsToMs = (s: number) => s * 1000\nexport const minutesToMs = (m: number) => secondsToMs(m * 60)\nexport const hoursToMs = (h: number) => minutesToMs(h * 60)\nexport const daysToMs = (d: number) => hoursToMs(d * 24)\n\nconst diff = (refDate: Date, date: Date): number => refDate.getTime() - date.getTime()\n\nconst diffDays = (refDate: Date, date: Date): number => {\n  const delta = diff(refDate, date)\n  return msToDays(delta)\n}\n\nexport const integerDiffDays = (refDate: Date, date: Date): number => Math.trunc(diffDays(refDate, date))\n\nconst diffHours = (refDate: Date, date: Date): number => {\n  const days = diffDays(refDate, date)\n  const decimal = days - Math.trunc(days)\n  return msToHours(daysToMs(decimal))\n}\n\nexport const integerDiffHours = (refDate: Date, date: Date): number => Math.trunc(diffHours(refDate, date))\n\nconst diffMinutes = (refDate: Date, date: Date): number => {\n  const hours = diffHours(refDate, date)\n  const decimal = hours - Math.trunc(hours)\n  return msToMinutes(hoursToMs(decimal))\n}\n\nexport const integerDiffMinutes = (refDate: Date, date: Date): number => Math.trunc(diffMinutes(refDate, date))\n\nconst diffSeconds = (refDate: Date, date: Date): number => {\n  const minutes = diffMinutes(refDate, date)\n  const decimal = minutes - Math.trunc(minutes)\n  return msToSeconds(minutesToMs(decimal))\n}\n\nexport const integerDiffSeconds = (refDate: Date, date: Date): number => Math.trunc(diffSeconds(refDate, date))\n\n\n\n\n","import * as React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport { integerDiffDays, integerDiffHours, integerDiffMinutes, integerDiffSeconds } from \"./time.converter\"\n\ntype CounterProps = {\n  refDate: Date\n}\n\nconst Counter: React.FC<CounterProps> = ({ refDate }) => {\n  //const [ refDate, setRefDate ] = useState(new Date(2021, 11, 13, 15, 0, 0, 0))\n  const [ days, setDays ] = useState(1)\n  const [ hours, setHours ] = useState(12)\n  const [ minutes, setMinutes ] = useState(25)\n  const [ seconds, setSeconds ] = useState(20)\n\n  useEffect(() => {\n    setDays(integerDiffDays(refDate, new Date()))\n  })\n\n  useEffect(() => {\n    setHours(integerDiffHours(refDate, new Date()))\n  })\n\n  useEffect(() => {\n    setMinutes(integerDiffMinutes(refDate, new Date()))\n  })\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(integerDiffSeconds(refDate, new Date()))\n    }, 500)\n\n    return () => clearInterval(interval)\n  }, [])\n\n\n  return (\n    <div>\n      <span>{days}</span><span> days</span>,\n      <span>{hours}</span><span> hours</span>,\n      <span>{minutes}</span><span> minutes</span>,\n      <span>{seconds}</span><span> seconds</span>\n    </div>\n  )\n}\n\nexport default Counter\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Counter from \"../counter/counter\"\n\nconst IndexPage = () => (\n  <Layout>\n    <Seo title=\"Home\" />\n    <Counter refDate={new Date(2021, 11, 13, 15, 0, 0, 0)} />\n    <Counter refDate={new Date(2022, 3, 1, 12, 0, 0, 0)} />\n  </Layout>\n)\n\nexport default IndexPage\n"],"names":["msToSeconds","ms","msToMinutes","msToHours","minutesToMs","m","hoursToMs","h","diffDays","refDate","date","delta","getTime","diff","diffHours","days","decimal","Math","trunc","diffMinutes","hours","integerDiffSeconds","minutes","diffSeconds","useState","setDays","setHours","setMinutes","seconds","setSeconds","useEffect","integerDiffDays","Date","integerDiffHours","integerDiffMinutes","interval","setInterval","clearInterval","title"],"sourceRoot":""}